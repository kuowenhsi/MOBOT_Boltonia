labs(x = element_blank(), y = expression(P[n]~(mu*mol~m^{-2}~s^{-2})))+
theme_bw()+
theme(axis.text.x = element_blank(), legend.position = "none")
p1
setwd("/Users/kuowenhsi/OneDrive - Washington University in St. Louis/Drought_F3_paper")
p <- ggplot(data = LICOR_data, aes(x = Accession, y = Photo))+
geom_violin(aes(group = interaction(Accession, Trt), fill = Trt), color = NA, scale = "width", alpha = 0.7)+
geom_boxplot(aes(group =interaction(Accession, Trt)), fill = NA, width = 0.2, outlier.shape = NA, position = position_dodge(width = 0.9))+
geom_point(aes(group =interaction(Accession, Trt)),position = position_dodge(width = 0.9), size = 0.5)+
scale_x_discrete("")+
ylab(expression(P[n]~(mu*mol~m^{-2}~s^{-2})))+
scale_fill_manual(values = c("#00BFC4", "#F8766D"))+
theme_bw()+
theme(panel.grid.minor = element_blank(), legend.position = c(0.8,0.85), legend.title = element_blank())
p
p <- perform_analysis(data = LICOR_data, response_variable = "Photo", Y_label = expression(P[n]~(mu*mol~m^{-2}~s^{-2})), 0.15, 1, 0)
p
ggsave("parental_Pn_20240326.png", width = 3.5, height = 3.5, dpi = 900)
p <- perform_analysis(data = LICOR_data, response_variable = "Cond", Y_label = expression(G[s]~(mol~m^{-2}~s^{-1})), 0.15, 1, 0)
p
ggsave("parental_Gs_20240326.png", width = 3.5, height = 3.5, dpi = 900)
p <- perform_analysis(data = LICOR_data, response_variable = "WUE", Y_label = expression(WUE~(mu*mol~CO[2]~mol^{-1}~H[2]*O)), 0.15, 1, 0)
p
ggsave("parental_WUE_20240326.png", width = 3.5, height = 3.5, dpi = 600)
ggsave("parental_WUE_20240326.png", width = 3.5, height = 3.5, dpi = 900)
library(lmerTest)
mtcars
library(tidyverse)
library(ggpubr)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Boltonia")
Boltonia_data <- read_csv("./data/Boltonia_merged_data_tidy_20240717.csv")
# MaternalLine is actually the site (Accession).
# FlowerHead is actually the individual (real maternal genotype).
Boltonia_data_rep <- Boltonia_data %>%
group_by(MaternalLine, County, FlowerHead, index)%>%
summarize()%>%
group_by(MaternalLine, County, FlowerHead)%>%
summarise(rep = n())
View(Boltonia_data_rep)
unique(Boltonia_data$num_traits)
library(sf)
library(sp)
library(raster)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Physaria")
env_files <- list.files("/Users/kuowenhsi/OneDrive - Washington University in St. Louis/Undergrad/Grace/Env_varibles", pattern = "*.tif$")
env_files
Physaria_data <- read_csv("./data/Physaria_MergedData_20240703.csv")
Physaria_data_sf <- st_as_sf(cyano_data, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)
Physaria_data_sf <- st_as_sf(Physaria_data, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)
plot(cyano_data_sf)
plot(Physaria_data_sf)
wc_names <- c(BIO1 = "Annual Mean Temperature",
BIO2 = "Mean Diurnal Range (Mean of monthly (max temp - min temp))",
BIO3 = "Isothermality (BIO2/BIO7) (×100)",
BIO4 = "Temperature Seasonality (standard deviation ×100)",
BIO5 = "Max Temperature of Warmest Month",
BIO6 = "Min Temperature of Coldest Month",
BIO7 = "Temperature Annual Range (BIO5-BIO6)",
BIO8 = "Mean Temperature of Wettest Quarter",
BIO9 = "Mean Temperature of Driest Quarter",
BIO10 = "Mean Temperature of Warmest Quarter",
BIO11 = "Mean Temperature of Coldest Quarter",
BIO12 = "Annual Precipitation",
BIO13 = "Precipitation of Wettest Month",
BIO14 = "Precipitation of Driest Month",
BIO15 = "Precipitation Seasonality (Coefficient of Variation)",
BIO16 = "Precipitation of Wettest Quarter",
BIO17 = "Precipitation of Driest Quarter",
BIO18 = "Precipitation of Warmest Quarter",
BIO19 = "Precipitation of Coldest Quarter")
usa_state <- ne_states(country = "United States of America", returnclass = "sf") %>%
st_crop(xmin = -135, ymin = -55, xmax = -65, ymax = 60) %>%
st_geometry()
canada_state <- ne_states(country = "canada", returnclass = "sf") %>%
st_crop(xmin = -135, ymin = -55, xmax = -65, ymax = 60) %>%
st_geometry()
mexico_state <- ne_states(country = "mexico", returnclass = "sf") %>%
st_crop(xmin = -135, ymin = -55, xmax = -65, ymax = 60) %>%
st_geometry()
class(usa_state)
plot(usa_state, axes = TRUE)
plot(canada_state, axes = TRUE)
plot(mexico_state, axes = TRUE)
env_files[[19]]
env_layer <- raster(paste0("/Users/kuowenhsi/OneDrive\ -\ Washington\ University\ in\ St.\ Louis/Undergrad/Grace/Env_varibles/", env_files[[19]]))
plot(env_layer, xlim = c(-124, -121), ylim = c(48, 50), axes = TRUE)
plot(env_layer, xlim = c(-105, -80), ylim = c(40, 50), axes = TRUE)
plot(env_layer, xlim = c(-90, -82), ylim = c(34, 40), axes = TRUE)
plot(env_layer, xlim = c(-90, -82), ylim = c(34, 40), axes = TRUE)
plot(env_layer, xlim = c(-90, -82), ylim = c(34, 40), axes = F)
plot(env_layer, xlim = c(-90, -82), ylim = c(34, 40), axes = TRUE)
points(Physaria_data$Longitude, Physaria_data$Latitude)
env_layer <- raster(paste0("/Users/kuowenhsi/OneDrive\ -\ Washington\ University\ in\ St.\ Louis/Undergrad/Grace/Env_varibles/", env_files[[19]]))%>%
crop(extent(-90, -82, 34, 40))
plot(env_layer, xlim = c(-90, -82), ylim = c(34, 40), axes = TRUE)
plot(env_layer, axes = TRUE)
points(Physaria_data$Longitude, Physaria_data$Latitude)
env_layer <- raster(paste0("/Users/kuowenhsi/OneDrive\ -\ Washington\ University\ in\ St.\ Louis/Undergrad/Grace/Env_varibles/", env_files[[1]]))%>%
crop(extent(-90, -82, 34, 40))
plot(env_layer, axes = TRUE)
points(Physaria_data$Longitude, Physaria_data$Latitude)
library(tidyverse)
library(ggpubr)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Boltonia")
Boltonia_data <- read_csv("./data/Boltonia_merged_data_tidy_20240717.csv")
# MaternalLine is actually the site (Accession).
# FlowerHead is actually the individual (real maternal genotype).
Boltonia_data_rep <- Boltonia_data %>%
group_by(MaternalLine, County, FlowerHead, index)%>%
summarize()%>%
group_by(MaternalLine, County, FlowerHead)%>%
summarise(rep = n())
unique(Boltonia_data$num_traits)
Boltonia_data_FlowerRatio <- Boltonia_data %>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF")) %>%
mutate(Date = factor(Date)) %>%
mutate(num_values = case_when(is.na(num_values) ~ 0, num_values == 0 ~ 0, num_values >= 1 ~ 1, TRUE ~ as.numeric(NA))) %>%
group_by(Date, num_traits) %>%
summarize(flowerRatio = sum(num_values)/n()) %>%
ungroup() %>%
complete(Date, num_traits) %>%
mutate(flowerRatio = case_when(is.na(flowerRatio) ~ 0, TRUE ~ flowerRatio), Date = as.Date(Date))
Boltonia_data_county_coordinations <- Boltonia_data %>%
group_by(County)%>%
summarize(mean_Google_latitude = mean(Google_latitude), mean_Google_longitude = mean(Google_longitude))%>%
arrange(mean_Google_latitude)%>%
mutate(labels = paste0(County, "\n", "(", round(mean_Google_latitude, 2), ", ", round(mean_Google_longitude, 2), ")"))
Boltonia_data_FlowerRatio_county <- Boltonia_data %>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF")) %>%
mutate(Date = factor(Date)) %>%
mutate(num_values = case_when(is.na(num_values) ~ 0, num_values == 0 ~ 0, num_values >= 1 ~ 1, TRUE ~ as.numeric(NA))) %>%
group_by(Date, num_traits, County) %>%
summarize(flowerRatio = sum(num_values)/n())%>%
ungroup() %>%
complete(Date, num_traits, County) %>%
mutate(flowerRatio = case_when(is.na(flowerRatio) ~ 0, TRUE ~ flowerRatio), Date = as.Date(Date))%>%
left_join(Boltonia_data_county_coordinations, by = "County")
Boltonia_data_DaysToFlower <- Boltonia_data %>%
mutate(index = as.factor(index))%>%
mutate(PlantingDate = as.Date(PlantingDate, "%m/%d/%y"), FirstLeafDate = as.Date(FirstLeafDate, "%m/%d/%y"))%>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF"))%>%
mutate(num_values = case_when(is.na(num_values) ~ 0, TRUE ~ num_values))%>%
group_by(index, num_traits)%>%
arrange(Date, .by_group = TRUE)%>%
mutate(is_first = case_when((lag(num_values) == 0 & num_values > 0) ~ TRUE, TRUE ~ FALSE))%>%
filter(is_first == TRUE)%>%
filter(Date == min(Date))%>%
select(index, PlantingDate, FirstLeafDate, num_traits, Date)%>%
mutate(DaysToFlower = Date -PlantingDate)%>%
ungroup()%>%
select(index, num_traits, DaysToFlower)%>%
complete(index, num_traits)%>%
mutate(DaysToFlower = case_when(is.na(DaysToFlower) ~ as.difftime(150, "%d", "days"), TRUE ~ DaysToFlower))%>%
mutate(index = as.integer(index), num_traits = factor(num_traits, levels = c("numFlwrB", "numRayF", "numDiscF"))) %>%
left_join(read_csv("./data/Boltonia_merged_data_20240627.csv") %>% select(1:12), by = "index", relationship = "many-to-many")
library(tidyverse)
library(ggpubr)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Boltonia")
Boltonia_data <- read_csv("./data/Boltonia_merged_data_tidy_20240717.csv")
# MaternalLine is actually the site (Accession).
# FlowerHead is actually the individual (real maternal genotype).
Boltonia_data_rep <- Boltonia_data %>%
group_by(MaternalLine, County, FlowerHead, index)%>%
summarize()%>%
group_by(MaternalLine, County, FlowerHead)%>%
summarise(rep = n())
unique(Boltonia_data$num_traits)
Boltonia_data_FlowerRatio <- Boltonia_data %>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF")) %>%
mutate(Date = factor(Date)) %>%
mutate(num_values = case_when(is.na(num_values) ~ 0, num_values == 0 ~ 0, num_values >= 1 ~ 1, TRUE ~ as.numeric(NA))) %>%
group_by(Date, num_traits) %>%
summarize(flowerRatio = sum(num_values)/n()) %>%
ungroup() %>%
complete(Date, num_traits) %>%
mutate(flowerRatio = case_when(is.na(flowerRatio) ~ 0, TRUE ~ flowerRatio), Date = as.Date(Date))
Boltonia_data_county_coordinations <- Boltonia_data %>%
group_by(County)%>%
summarize(mean_Google_latitude = mean(Google_latitude), mean_Google_longitude = mean(Google_longitude))%>%
arrange(mean_Google_latitude)%>%
mutate(labels = paste0(County, "\n", "(", round(mean_Google_latitude, 2), ", ", round(mean_Google_longitude, 2), ")"))
Boltonia_data_FlowerRatio_county <- Boltonia_data %>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF")) %>%
mutate(Date = factor(Date)) %>%
mutate(num_values = case_when(is.na(num_values) ~ 0, num_values == 0 ~ 0, num_values >= 1 ~ 1, TRUE ~ as.numeric(NA))) %>%
group_by(Date, num_traits, County) %>%
summarize(flowerRatio = sum(num_values)/n())%>%
ungroup() %>%
complete(Date, num_traits, County) %>%
mutate(flowerRatio = case_when(is.na(flowerRatio) ~ 0, TRUE ~ flowerRatio), Date = as.Date(Date))%>%
left_join(Boltonia_data_county_coordinations, by = "County")
Boltonia_data_DaysToFlower <- Boltonia_data %>%
mutate(index = as.factor(index))%>%
mutate(PlantingDate = as.Date(PlantingDate, "%m/%d/%y"), FirstLeafDate = as.Date(FirstLeafDate, "%m/%d/%y"))%>%
filter(num_traits %in% c("numFlwrB", "numRayF", "numDiscF"))%>%
mutate(num_values = case_when(is.na(num_values) ~ 0, TRUE ~ num_values))%>%
group_by(index, num_traits)%>%
arrange(Date, .by_group = TRUE)%>%
mutate(is_first = case_when((lag(num_values) == 0 & num_values > 0) ~ TRUE, TRUE ~ FALSE))%>%
filter(is_first == TRUE)%>%
filter(Date == min(Date))%>%
select(index, PlantingDate, FirstLeafDate, num_traits, Date)%>%
mutate(DaysToFlower = Date -PlantingDate)%>%
ungroup()%>%
select(index, num_traits, DaysToFlower)%>%
complete(index, num_traits)%>%
mutate(DaysToFlower = case_when(is.na(DaysToFlower) ~ as.difftime(150, "%d", "days"), TRUE ~ DaysToFlower))%>%
mutate(index = as.integer(index), num_traits = factor(num_traits, levels = c("numFlwrB", "numRayF", "numDiscF"))) %>%
left_join(read_csv("./data/Boltonia_merged_data_20240627.csv") %>% select(1:12), by = "index", relationship = "many-to-many")
Boltonia_data_CountyLabels <- Boltonia_data %>%
left_join(Boltonia_data_county_coordinations, by = "County")
p <- ggplot(data = Boltonia_data_FlowerRatio, mapping = aes(x = Date, y = flowerRatio)) +
geom_col(aes(fill = num_traits))+
scale_y_continuous(name = "Total flower ratio", limits = c(0, 1), expand = c(0, 0, 0, 0))+
scale_x_date(name = "", breaks = unique(Boltonia_data_FlowerRatio$Date), date_labels = "%b %d")+
facet_wrap(.~num_traits, nrow = 3)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5), panel.grid.minor = element_blank(), legend.position = "none")
ggsave("./figures/Boltonia_total_flower_ratio.png", width = 8, height = 12)
# County first
p <- ggplot(data = Boltonia_data_FlowerRatio_county, aes(x = reorder(labels, mean_Google_latitude), y = flowerRatio))+
geom_col(aes(group = Date, fill = Date), position = position_dodge())+
scale_x_discrete(name = "")+
scale_fill_date(low = "yellow", high = "red")+
facet_wrap(.~num_traits, nrow = 3)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5), panel.grid.minor = element_blank(), legend.position = "bottom", legend.key.width = unit(1, "in") )
ggsave("./figures/Boltonia_total_flower_ratio_by_county.png", width = 10, height = 6)
# buds
p <- ggplot(data = filter(Boltonia_data_FlowerRatio_county, num_traits == "numFlwrB"), aes(x = Date, y = flowerRatio))+
geom_col(aes(fill = as.character(Date)))+
scale_y_continuous(name = "Flower bud ratio")+
scale_x_date(name = "")+
facet_wrap(.~reorder(labels, mean_Google_latitude), nrow = 3)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5), panel.grid = element_blank(), legend.position = "none")
ggsave("./figures/Boltonia_total_bud_ratio_by_county.png", width = 10, height = 10)
# Ray
p <- ggplot(data = filter(Boltonia_data_FlowerRatio_county, num_traits == "numRayF"), aes(x = Date, y = flowerRatio))+
geom_col(aes(fill = as.character(Date)))+
scale_y_continuous(name = "Flower ray flower ratio")+
scale_x_date(name = "")+
facet_wrap(.~reorder(labels, mean_Google_latitude), nrow = 3)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5), panel.grid = element_blank(), legend.position = "none")
ggsave("./figures/Boltonia_total_ray_ratio_by_county.png", width = 10, height = 10)
# buds
p <- ggplot(data = filter(Boltonia_data_FlowerRatio_county, num_traits == "numDiscF"), aes(x = Date, y = flowerRatio))+
geom_col(aes(fill = as.character(Date)))+
scale_y_continuous(name = "Flower disc ratio")+
scale_x_date(name = "")+
facet_wrap(.~reorder(labels, mean_Google_latitude), nrow = 3)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5), panel.grid = element_blank(), legend.position = "none")
ggsave("./figures/Boltonia_total_disk_ratio_by_county.png", width = 10, height = 10)
p <- ggplot(data = Boltonia_data_DaysToFlower, aes(x = Google_latitude, y = as.integer(DaysToFlower)))+
geom_point()+
geom_point(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) == 150), color = "red")+
stat_smooth(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150), method = "lm", color = "blue")+
stat_cor(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150),method = "pearson", label.x.npc = 0, label.y.npc = 0.80)+
stat_regline_equation(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150),label.x.npc = 0, label.y.npc = 0.95)+
scale_y_continuous(name = "Days to flower")+
facet_wrap(.~num_traits, nrow = 1)+
theme_bw()+
theme(panel.grid.minor = element_blank(), legend.position = "bottom")
p
ggsave("./figures/Boltonia_days_to_flower_by_latitude.png", width = 13, height = 5)
p <- ggplot(data = Boltonia_data_DaysToFlower, aes(x = Google_longitude, y = as.integer(DaysToFlower)))+
geom_point()+
geom_point(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) == 150), color = "red")+
stat_smooth(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150), method = "lm", color = "blue")+
stat_cor(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150),method = "pearson", label.x.npc = 0, label.y.npc = 0.80)+
stat_regline_equation(data = filter(Boltonia_data_DaysToFlower, as.integer(DaysToFlower) < 150),label.x.npc = 0, label.y.npc = 0.95)+
scale_y_continuous(name = "Days to flower")+
facet_wrap(.~num_traits, nrow = 1)+
theme_bw()+
theme(panel.grid.minor = element_blank(), legend.position = "bottom")
p
ggsave("./figures/Boltonia_days_to_flower_by_longitude.png", width = 13, height = 5)
# Date first
p <- ggplot(data = Boltonia_data_FlowerRatio_county, aes(x = as.character(Date), y = flowerRatio))+
geom_col(aes(group = County, fill = County), position = position_dodge())
p
p <- ggplot(data = Boltonia_data_FlowerRatio_county, aes(x = County, y = flowerRatio))+
geom_col()+
facet_wrap(.~Date)+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
p
p <- ggplot(data = Boltonia_data_FlowerRatio_county, mapping = aes(x = mean_Google_latitude, y = flowerRatio))+
geom_point()+
stat_smooth(method = "lm", color = "blue")+
stat_cor(method = "pearson", label.x.npc = 0, label.y.npc = 0.80)+
stat_regline_equation(label.x.npc = 0, label.y.npc = 0.95)+
facet_wrap(.~Date)+
theme_bw()
p
# if we do not want those dead plants in flowering ratio calculation
mutate(num_values = case_when(is.na(num_values) ~ 0, num_values == 0 ~ 0, num_values >= 1 ~ 1, TRUE ~ as.numeric(NA)))
p <- ggplot(data = filter(Boltonia_data, num_traits == "stemLength", Date == as.Date("2024-06-19")), aes(x = Google_Longitude, y = num_values))+
geom_point()
p
p <- ggplot(data = filter(Boltonia_data_CountyLabels, num_traits == "stemLength"), aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
facet_grid(~reorder(labels, mean_Google_latitude), scales = "free_x", space = "free_x")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggsave("./figures/County_stemlength.png", width = 30, height = 8, dpi = 600)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")
View(stemLength_data)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")%>%
filter(Date == as.Date("2024-07-03"))
stemLength_model <- as.formula(stemLength ~ MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
stemLength_model <- as.formula(num_values ~ MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_anova <- anova(stemLength_model, data = stemLength_data)
stemLength_anova <- anova(lm(stemLength_model), data = stemLength_data)
?anova
stemLength_anova <- anova(lm(stemLength_model, data = stemLength_data))
print(stemLength_anova)
summary(stemLength_anova)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
print(stemLength_anova)
summary(stemLength_aov)
print(stemLength_anova)
summary(stemLength_anova)
## Method 3
library(cars)
## Method 3
library(car)
stemLength_Anova <- Anova(lm(stemLength_model, data = stemLength_data))
print(stemLength_Anova)
lm(stemLength_model, data = stemLength_data)
stemLength_Anova <- Anova(stemLength_model, data = stemLength_data)
stemLength_Anova <- Anova(lm(stemLength_model), data = stemLength_data)
stemLength_Anova <- Anova(lm(stemLength_model, data = stemLength_data))
print(stemLength_Anova)
print(stemLength_anova)
## Method 4
library(lmerTest)
stemLength_Anova <- lmerTest::anova(lmer(stemLength_model, data = stemLength_data))
stemLength_Anova <- anova(lmer(stemLength_model, data = stemLength_data))
stemLength_model_random_effect <- as.formula(num_values ~ (1|MaternalLine))
stemLength_Anova <- anova(lmer(stemLength_model_random_effect, data = stemLength_data))
print(stemLength_Anova)
summary(stemLength_Anova)
stemLength_Anova
stemLength_model_random_effect <- as.formula(num_values ~ (FlowerHead) + (FlowerHead|MaternalLine) )
stemLength_Anova <- anova(lmer(stemLength_model_random_effect, data = stemLength_data))
print(stemLength_Anova)
stemLength_model_random_effect <- as.formula(num_values ~ (FlowerHead) + (1:FlowerHead|MaternalLine) )
stemLength_Anova <- anova(lmer(stemLength_model_random_effect, data = stemLength_data))
print(stemLength_Anova)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")
stemLength_model_random_effect <- as.formula(num_values ~ MaternalLine + (1|Date))
stemLength_Anova <- anova(lmer(stemLength_model_random_effect, data = stemLength_data))
print(stemLength_Anova)
stemLength_Anova <- anova(lmer(stemLength_model_random_effect, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")%>%
filter(Date == as.Date("2024-07-03"))
stemLength_model <- as.formula(num_values ~ MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")%>%
filter(Date == as.Date("2024-07-03"))
stemLength_model <- as.formula(num_values ~ County + MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ County)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ Google_latitude)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ MaternalLine + County)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ MaternalLine + County)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")%>%
filter(Date == as.Date("2024-07-03"))
stemLength_model <- as.formula(num_values ~ MaternalLine + County)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ County)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ County + MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_Anova <- Anova(lm(num_values ~ MaternalLine + County, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_Anova <- Anova(lm(num_values ~ County + MaternalLine, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")
stemLength_Anova <- Anova(lm(num_values ~ Date + MaternalLine, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_Anova <- Anova(lm(num_values ~ MaternalLine + Date, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_Anova <- Anova(lm(num_values ~ MaternalLine + Date + MaternalLine:Date, data = stemLength_data), type = "II")
print(stemLength_Anova)
stemLength_Anova <- Anova(lm(num_values ~ MaternalLine + Date + MaternalLine:Date, data = stemLength_data), type = "III")
print(stemLength_Anova)
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
stemLength_data <- filter(Boltonia_data_CountyLabels, num_traits == "stemLength")%>%
filter(Date == as.Date("2024-07-03"))
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test()+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2)+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
stemLength_model <- as.formula(num_values ~ MaternalLine)
stemLength_aov <- aov(stemLength_model, data = stemLength_data)
print(stemLength_aov)
summary(stemLength_aov)
?stat_anova_test
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2, label = "{method}, F({DFn},{Dfd}) = {F}, ,p = {p.format}")+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2, label = "{method}, F({DFn},{DFd}) = {F}, ,p = {p.format}")+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2, label = expression("{method}, F({DFn},{DFd}) = {F}, ,p = {p.format}"))+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2, label = expression("{method}, F({DFn},{DFd}) = {F}, ,p = {p.format}"))+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p <- ggplot(data = stemLength_data, aes(x = MaternalLine, y = num_values))+
geom_boxplot(aes(group = paste(Date, MaternalLine), fill = MaternalLine), position = position_dodge())+
stat_anova_test(label.x.npc = 0.2, label = "{method}, F({DFn},{DFd}) = {F}, ,p = {p.format}")+
labs(title = "County & Stem Length")+
scale_x_discrete("Accession (Site)")+
scale_y_continuous("Stem Length (cm)")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p
p <- ggplot(data = Boltonia_data_FlowerRatio_county, mapping = aes(x = mean_Google_latitude, y = flowerRatio))+
geom_point()+
stat_smooth(method = "lm", color = "blue")+
stat_cor(method = "pearson", label.x.npc = 0, label.y.npc = 0.80)+
stat_regline_equation(label.x.npc = 0, label.y.npc = 0.95)+
facet_wrap(.~Date)+
theme_bw()
p
aov_text <- aov(flowerRatio ~ mean_Google_latitude, data = filter(Boltonia_data_FlowerRatio_county, Date == as.Date("2024-07-03")))
summary(aov_text)
?scale_fill_gradient
